# vim: ft=make

# Configured with:
CONFIG_COMMAND ?= @configure_command@

VERSION = @version@
VERSIONP = @versionp@

SUNDIALS_VERSION = @sundials_version@

AT_LEAST_7_0_0 = @sundials_at_least_7_0_0@
AT_LEAST_6_7_0 = @sundials_at_least_6_7_0@
AT_LEAST_6_6_0 = @sundials_at_least_6_6_0@
AT_LEAST_6_4_0 = @sundials_at_least_6_4_0@
AT_LEAST_6_3_0 = @sundials_at_least_6_3_0@
AT_LEAST_6_2_0 = @sundials_at_least_6_2_0@
AT_LEAST_6_0_0 = @sundials_at_least_6_0_0@
AT_LEAST_5_8_0 = @sundials_at_least_5_8_0@
AT_LEAST_5_4_0 = @sundials_at_least_5_4_0@
AT_LEAST_5_3_0 = @sundials_at_least_5_3_0@
AT_LEAST_5_1_0 = @sundials_at_least_5_1_0@
AT_LEAST_5_0_0 = @sundials_at_least_5_0_0@
AT_LEAST_4_0_0 = @sundials_at_least_4_0_0@
AT_LEAST_3_2_0 = @sundials_at_least_3_2_0@
AT_LEAST_3_1_2 = @sundials_at_least_3_1_2@
AT_LEAST_3_0 = @sundials_at_least_3_0@
AT_LEAST_2_7 = @sundials_at_least_2_7@
AT_LEAST_2_6 = @sundials_at_least_2_6@
AT_LEAST_2_5 = @sundials_at_least_2_5@

ifeq ($(filter $(SUNDIALS_VERSION),4.0.0 4.0.1 4.0.2 4.1.0 5.0.0 5.1.0 5.2.0 5.3.0),)
OK_CVodeGetSensNumNonlinSolvIters=1
else
OK_CVodeGetSensNumNonlinSolvIters=
endif

SUNDIALS_DOC_ROOT_DEFAULT  = https://sundials.readthedocs.io/en/v$(SUNDIALS_VERSION)/
OCAML_DOC_ROOT_DEFAULT  = http://caml.inria.fr/pub/docs/manual-ocaml/libref/
MATHJAX_URL_DEFAULT     = @mathjax@

OCAML_INC_PATH=@ocaml_inc_path@
KLU_INC_PATH=@klu_inc_path@
SUPERLUMT_INC_PATH=@superlumt_inc_path@

CC = @cc@
CPP= @cpp@
CFLAGS += @cflags@ $(KLU_INC_PATH) $(SUPERLUMT_INC_PATH)
LDFLAGS += @ldflags@
CPPFLAGS += @cppflags@ @klu_inc_path@ @superlumt_inc_path@
C_SUPPRESS_WARNINGS = @c_suppress_warnings@

# FIXME: gcc-dependent
ML_CPPFLAGS = @ml_cppflags@

LAPACK_ENABLED=@lapack_enabled@

NVECMANYVECTOR_ENABLED=@nvecmanyvector_enabled@

MPICC = @mpicc@
MPIRUN = @mpirun@
MPI_ENABLED=@ocamlmpi_enabled@

MPI_LIBLINK=@parallel_nvec_libs@

# https://stackoverflow.com/a/16151140/
uniq = $(if $1,$(firstword $1) $(call uniq,$(filter-out $(firstword $1),$1)))

LIB_PATH = $(call uniq, @sundials_lib_path@ @superlumt_lib_path@ @klu_lib_path@)
INC_PATH = @sundials_inc_path@
CVODE_LDFLAGS = -lsundials_cvode @serial_nvec_libs@ @sparse_libs@ @matrix_libs@ @lsolver_libs@ -lm $(LDFLAGS)
CVODE_CFLAGS = $(INC_PATH) $(CFLAGS)
CVODES_LDFLAGS = -lsundials_cvodes @serial_nvec_libs@ @sparse_libs@ @matrix_libs@ @lsolver_libs@ -lm $(LDFLAGS)
CVODES_CFLAGS = $(INC_PATH) $(CFLAGS)
ARKODE_LDFLAGS = @link_sundials_arkode@ @serial_nvec_libs@ @sparse_libs@ @matrix_libs@ @lsolver_libs@ -lm $(LDFLAGS)
ARKODE_CFLAGS = $(INC_PATH) $(CFLAGS)
IDA_LDFLAGS = -lsundials_ida @serial_nvec_libs@ @sparse_libs@ @matrix_libs@ @lsolver_libs@ -lm $(LDFLAGS)
IDA_CFLAGS = $(INC_PATH) $(CFLAGS)
IDAS_LDFLAGS = -lsundials_idas @serial_nvec_libs@ @sparse_libs@ @matrix_libs@ @lsolver_libs@ -lm $(LDFLAGS)
IDAS_CFLAGS = $(INC_PATH) $(CFLAGS)
KINSOL_LDFLAGS = -lsundials_kinsol @serial_nvec_libs@ @sparse_libs@ @matrix_libs@ @lsolver_libs@ -lm $(LDFLAGS)
KINSOL_CFLAGS = $(INC_PATH) $(CFLAGS)

ARKODE_ENABLED = @arkode_enabled@
ARKODE_MLOBJ_MAIN = @arkode_mlobj_main@
ARKODE_COBJ_MAIN = @arkode_cobj_main@
ARKODE_MLOBJ_BBD = @arkode_mlobj_bbd@
ARKODE_COBJ_BBD = @arkode_cobj_bbd@
ARKODE_COBJ_SENS = @arkode_cobj_sens@

PTHREADS_ENABLED = @nvecpthreads_enabled@
PTHREADS_LIBLINK = -lsundials_nvecpthreads -lpthread

OPENMP_ENABLED = @nvecopenmp_enabled@
CFLAGS_OPENMP = @cflags_openmp@
OPENMP_LIBLINK = -lsundials_nvecopenmp @cflags_openmp@

KLU_ENABLED = @klu_enabled@
SUPERLUMT_ENABLED = @superlumt_enabled@

define common
  $(eval seen :=)
  $(eval dups :=)
  $(foreach _,$1,$(if $(filter $_,${seen}),
      $(if $(filter $_,${dups}),,$(eval dups += $_)),
      $(eval seen += $_)))
  ${dups}
endef

OCAML_VERSION = @ocaml_version@
OCAML_VERSION_STRING = @ocaml_version_string@

OCAML_AT_LEAST_5_0_0 = @ocaml_at_least_5_0_0@
OCAML_AT_LEAST_5_4_0 = @ocaml_at_least_5_4_0@

OCAMLC ?= @ocamlc@
OCAMLFLAGS += -no-alias-deps @ocamlflags@
OCAML_INCLUDE := $(shell $(OCAMLC) -where)
OCAML_ALL_LIBLINK = $(strip $(call common, $(CVODE_LDFLAGS) $(CVODES_LDFLAGS) \
		    			   $(ARKODE_LDFLAGS)		      \
					   $(IDA_LDFLAGS) $(IDAS_LDFLAGS)     \
					   $(KINSOL_LDFLAGS)))
OCAML_CVODE_LIBLINK  = $(filter-out $(OCAML_ALL_LIBLINK), $(CVODE_LDFLAGS))
OCAML_CVODES_LIBLINK = $(filter-out $(OCAML_ALL_LIBLINK), $(CVODES_LDFLAGS))
OCAML_ARKODE_LIBLINK = $(filter-out $(OCAML_ALL_LIBLINK), $(ARKODE_LDFLAGS))
OCAML_IDA_LIBLINK    = $(filter-out $(OCAML_ALL_LIBLINK), $(IDA_LDFLAGS))
OCAML_IDAS_LIBLINK   = $(filter-out $(OCAML_ALL_LIBLINK), $(IDAS_LDFLAGS))
OCAML_KINSOL_LIBLINK = $(filter-out $(OCAML_ALL_LIBLINK), $(KINSOL_LDFLAGS))
OCAML_MPI_LIBLINK = -lsundials_nvecparallel

BOUNDS_CHECKING = @bounds_checking@

OCAML ?= @OCAMLBIN@ocaml

OCAMLMPI ?= @ocamlmpi_path@

CAMLP4OF= @OCAMLBIN@camlp4of
CAMLP4ORF= @OCAMLBIN@camlp4orf

PKGDIR = @libdir@sundialsml/
STUBDIR= @stubdir@

TOP_ENABLED = @have_compiler_libs@

DOCDIR = @docdir@
INSTALL_DOCS = @install_docs@

OCAMLOPT ?= @ocamlopt@
OCAMLOPTFLAGS += -no-alias-deps @ocamloptflags@

OCAMLDEP ?= @ocamldep@
OCAMLDOC ?= @ocamldoc@
OCAMLDOC_PLUGIN ?= @ocamldoc_plugin@

OCAMLMKLIB ?= @OCAMLBIN@ocamlmklib -ocamlc "$(OCAMLC) $(OCAMLFLAGS)" -ocamlopt "$(OCAMLOPT) $(OCAMLOPTFLAGS)"
OCAMLMKLIBFLAGS ?= @ocamlmklibflags@ -verbose

ifeq ($(shell [ $(OCAML_VERSION) -lt 40700 ] && echo true),true)
BIGARRAY_CMA = bigarray.cma
BIGARRAY_CMXA = bigarray.cmxa
else
BIGARRAY_CMA =
BIGARRAY_CMXA =
endif

ENABLE_SHARED = @enable_shared@

GNUPLOT = gnuplot

OCAML_GRAPHICS_PATH = @ocaml_graphics_path@
OCAML_UNIX_PATH = @ocaml_unix_path@

EXAMPLESROOT = @EXAMPLESROOT@

ifeq ($(shell [ $(OCAML_VERSION) -lt 50000 ] && echo true),true)
EXAMPLE_INCLUDES=
else
EXAMPLE_INCLUDES=$(OCAML_UNIX_PATH:%=-I %)
endif

ifeq ($(shell [ $(OCAML_VERSION) -eq 50000 ] && echo true),true)
OCAML_VERSION_5_0_0=1
endif

SUBDIRS = sundials nvectors lsolvers cvode cvodes ida idas \
	  @arkode_subdir@ kinsol

XA=@XA@
XO=@XO@
XS=@XS@

CP     ?= cp
RM     ?= rm
CAT    ?= cat
ECHO   ?= echo
MKDIR  ?= mkdir -p
RMDIR  ?= rmdir
SED    ?= sed

MPI_DIRECTORIES = @ocamlmpi_path@
TOP_DIRECTORIES = @compiler_libs_path@
DIRECTORIES =

MPI_INCLUDES = $(MPI_DIRECTORIES:%=-I %)
TOP_INCLUDES = $(TOP_DIRECTORIES:%=-I %)
INCLUDES = $(DIRECTORIES:%=-I %)

OBJ_OPT = $(OBJ:.cmo=.cmx)

